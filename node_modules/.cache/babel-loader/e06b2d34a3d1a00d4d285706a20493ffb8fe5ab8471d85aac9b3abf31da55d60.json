{"ast":null,"code":"var _jsxFileName = \"/Users/abhilash/Downloads/jp-internal-app/src/components/FormField.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormField({\n  field,\n  value,\n  onChange,\n  options = [],\n  error\n}) {\n  const {\n    key,\n    label,\n    placeholderText,\n    inputType,\n    dataType\n  } = field;\n  const baseClass = 'jp-input';\n  const selectClass = `jp-select ${error ? 'border-red-500' : ''}`;\n  const errorClass = error ? 'border-red-500' : '';\n  const inputClass = `${baseClass} ${errorClass}`;\n  const renderInput = () => {\n    switch (inputType) {\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: selectClass,\n          value: value,\n          onChange: e => onChange(e.target.value),\n          disabled: loadingOptions,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: loadingOptions ? 'Fetching dropdown options…' : placeholderText || `Select ${label}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), !loadingOptions && options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      case 'textarea':\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: inputClass,\n          placeholder: placeholderText || label,\n          value: value,\n          onChange: e => onChange(e.target.value),\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      case 'radio':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 mt-1\",\n          children: options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-1 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: opt,\n              checked: value === opt,\n              onChange: e => onChange(e.target.value),\n              className: \"jp-radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), opt]\n          }, opt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: inputType || (dataType === 'number' ? 'number' : 'text'),\n          className: inputClass,\n          placeholder: placeholderText || label,\n          value: value,\n          onChange: e => onChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: key,\n      className: \"jp-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), renderInput(), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-red-600 mt-1\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c = FormField;\nexport default FormField;\nvar _c;\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FormField","field","value","onChange","options","error","key","label","placeholderText","inputType","dataType","baseClass","selectClass","errorClass","inputClass","renderInput","className","e","target","disabled","loadingOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","placeholder","rows","type","checked","htmlFor","_c","$RefreshReg$"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/components/FormField.js"],"sourcesContent":["import React from 'react';\n\nfunction FormField({ field, value, onChange, options = [], error }) {\n  const {\n    key,\n    label,\n    placeholderText,\n    inputType,\n    dataType\n  } = field;\n\n\n  const baseClass = 'jp-input';\n  const selectClass = `jp-select ${error ? 'border-red-500' : ''}`;\n  const errorClass = error ? 'border-red-500' : '';\n  const inputClass = `${baseClass} ${errorClass}`;\n\n  const renderInput = () => {\n    switch (inputType) {\n      case 'dropdown':\n        return (\n          <select\n            className={selectClass}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={loadingOptions}\n          >\n            <option value=\"\">\n              {loadingOptions ? 'Fetching dropdown options…' : (placeholderText || `Select ${label}`)}\n            </option>\n            {!loadingOptions && options.map((opt) => (\n              <option key={opt} value={opt}>{opt}</option>\n            ))}\n          </select>\n        );\n      case 'textarea':\n        return (\n          <textarea\n            className={inputClass}\n            placeholder={placeholderText || label}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            rows={3}\n          />\n        );\n      case 'radio':\n        return (\n          <div className=\"flex gap-4 mt-1\">\n            {options.map((opt) => (\n              <label key={opt} className=\"flex items-center gap-1 text-sm\">\n                <input\n                  type=\"radio\"\n                  value={opt}\n                  checked={value === opt}\n                  onChange={(e) => onChange(e.target.value)}\n                  className=\"jp-radio\"\n                />\n                {opt}\n              </label>\n            ))}\n          </div>\n        );\n      default:\n        return (\n          <input\n            type={inputType || (dataType === 'number' ? 'number' : 'text')}\n            className={inputClass}\n            placeholder={placeholderText || label}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={key} className=\"jp-label\">{label}</label>\n      {renderInput()}\n      {error && <p className=\"text-sm text-red-600 mt-1\">{error}</p>}\n    </div>\n  );\n}\n\nexport default FormField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
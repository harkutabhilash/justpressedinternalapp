{"ast":null,"code":"import { callBackend, fetchAppModules } from './moduleStructureAPI';\nexport async function fetchLogFormConfig(module) {\n  var _appModulesCache, _appModulesCache$data, _matched$modules$find;\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey));\n  const cacheDuration = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < cacheDuration) {\n    return cached.data;\n  }\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n\n  // ✅ Added fallback logic to fetch appModules if cache is not available\n  if (!appModulesCache || !appModulesCache.data) {\n    console.log(\"appModulesCache not found in session storage. Fetching from backend...\");\n    await fetchAppModules(true); // This will refresh sessionStorage\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  }\n  const matched = (_appModulesCache = appModulesCache) === null || _appModulesCache === void 0 ? void 0 : (_appModulesCache$data = _appModulesCache.data) === null || _appModulesCache$data === void 0 ? void 0 : _appModulesCache$data.find(group => group.modules.some(mod => mod.module === module));\n  const sheetId = matched === null || matched === void 0 ? void 0 : (_matched$modules$find = matched.modules.find(m => m.module === module)) === null || _matched$modules$find === void 0 ? void 0 : _matched$modules$find.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  //  const payload = { sheetId, tab: 'config' };\n  const cfg = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'config'\n  });\n  const dds = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'dropdowns'\n  });\n\n  // ---- normalize config -> array of field objects ----\n  const headers = (cfg === null || cfg === void 0 ? void 0 : cfg.headers) || [];\n  const rows = (cfg === null || cfg === void 0 ? void 0 : cfg.rows) || [];\n  const toBool = v => String(v).toLowerCase() === 'true';\n  const n = v => v === '' || v == null ? undefined : Number(v);\n  const fields = rows.map(r => {\n    var _n, _n2;\n    const obj = {};\n    headers.forEach((h, i) => {\n      var _ref, _r$h;\n      obj[h] = (_ref = (_r$h = r[h]) !== null && _r$h !== void 0 ? _r$h : r[i]) !== null && _ref !== void 0 ? _ref : r[headers[i]];\n    });\n\n    // coerce/clean\n    obj.showInApp = toBool(obj.showInApp);\n    obj.isRequired = String(obj.isRequired).toLowerCase() === 'true';\n    obj.formRow = (_n = n(obj.formRow)) !== null && _n !== void 0 ? _n : 0;\n    obj.formColumn = (_n2 = n(obj.formColumn)) !== null && _n2 !== void 0 ? _n2 : 0;\n\n    // dataType/inputType fixes (e.g. \"float(2)\")\n    const dt = String(obj.dataType || '').toLowerCase();\n    if (/^float|^number/.test(dt)) {\n      obj.dataType = 'number';\n      obj.inputType = obj.inputType || 'number';\n    }\n    if (String(obj.inputType).toLowerCase() === 'date') {\n      obj.dataType = 'date';\n    }\n    return obj;\n  }).filter(f => f.showInApp && f.key); // only visible fields\n\n  // ---- normalize dropdowns -> { key: string[] } ----\n  const ddRows = (dds === null || dds === void 0 ? void 0 : dds.rows) || [];\n  const dropdowns = {};\n  ddRows.forEach(row => {\n    Object.entries(row).forEach(([k, v]) => {\n      if (v != null && String(v).trim() !== '') {\n        (dropdowns[k] ||= new Set()).add(String(v));\n      }\n    });\n  });\n  Object.keys(dropdowns).forEach(k => dropdowns[k] = Array.from(dropdowns[k]).sort());\n  const finalData = {\n    fields,\n    dropdowns,\n    sheetId\n  };\n  sessionStorage.setItem(cacheKey, JSON.stringify({\n    data: finalData,\n    timestamp: Date.now()\n  }));\n  return finalData;\n}","map":{"version":3,"names":["callBackend","fetchAppModules","fetchLogFormConfig","module","_appModulesCache","_appModulesCache$data","_matched$modules$find","cacheKey","cached","JSON","parse","sessionStorage","getItem","cacheDuration","Date","now","timestamp","data","appModulesCache","console","log","matched","find","group","modules","some","mod","sheetId","m","Error","cfg","tab","dds","headers","rows","toBool","v","String","toLowerCase","n","undefined","Number","fields","map","r","_n","_n2","obj","forEach","h","i","_ref","_r$h","showInApp","isRequired","formRow","formColumn","dt","dataType","test","inputType","filter","f","key","ddRows","dropdowns","row","Object","entries","k","trim","Set","add","keys","Array","from","sort","finalData","setItem","stringify"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/utils/logFormAPI.js"],"sourcesContent":["import { callBackend, fetchAppModules } from './moduleStructureAPI';\n\nexport async function fetchLogFormConfig(module) {\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey));\n  const cacheDuration = 6 * 60 * 60 * 1000;\n\n  if (cached && Date.now() - cached.timestamp < cacheDuration) {\n    return cached.data;\n  }\n\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n\n  // ✅ Added fallback logic to fetch appModules if cache is not available\n  if (!appModulesCache || !appModulesCache.data) {\n    console.log(\"appModulesCache not found in session storage. Fetching from backend...\");\n    await fetchAppModules(true); // This will refresh sessionStorage\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  }\n\n  const matched = appModulesCache?.data?.find(group =>\n    group.modules.some(mod => mod.module === module)\n  );\n\n  const sheetId = matched?.modules.find(m => m.module === module)?.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n//  const payload = { sheetId, tab: 'config' };\n  const cfg = await callBackend('getSheetData', { sheetId, tab: 'config' });\n  const dds = await callBackend('getSheetData', { sheetId, tab: 'dropdowns' });\n\n  // ---- normalize config -> array of field objects ----\n  const headers = (cfg?.headers || []);\n  const rows    = (cfg?.rows || []);\n  const toBool  = (v) => String(v).toLowerCase() === 'true';\n  const n       = (v) => (v === '' || v == null ? undefined : Number(v));\n\n  const fields = rows.map(r => {\n    const obj = {};\n    headers.forEach((h,i) => { obj[h] = r[h] ?? r[i] ?? r[headers[i]]; });\n\n    // coerce/clean\n    obj.showInApp   = toBool(obj.showInApp);\n    obj.isRequired  = String(obj.isRequired).toLowerCase() === 'true';\n    obj.formRow     = n(obj.formRow) ?? 0;\n    obj.formColumn  = n(obj.formColumn) ?? 0;\n\n    // dataType/inputType fixes (e.g. \"float(2)\")\n    const dt = String(obj.dataType || '').toLowerCase();\n    if (/^float|^number/.test(dt)) {\n      obj.dataType  = 'number';\n      obj.inputType = obj.inputType || 'number';\n    }\n    if (String(obj.inputType).toLowerCase() === 'date') {\n      obj.dataType = 'date';\n    }\n    return obj;\n  }).filter(f => f.showInApp && f.key);  // only visible fields\n\n  // ---- normalize dropdowns -> { key: string[] } ----\n  const ddRows = (dds?.rows || []);\n  const dropdowns = {};\n  ddRows.forEach(row => {\n    Object.entries(row).forEach(([k,v]) => {\n      if (v != null && String(v).trim() !== '') {\n        (dropdowns[k] ||= new Set()).add(String(v));\n      }\n    });\n  });\n  Object.keys(dropdowns).forEach(k => dropdowns[k] = Array.from(dropdowns[k]).sort());\n\n  const finalData = { fields, dropdowns, sheetId };\n  sessionStorage.setItem(cacheKey, JSON.stringify({ data: finalData, timestamp: Date.now() }));\n  return finalData;\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
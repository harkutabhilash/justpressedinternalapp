{"ast":null,"code":"// src/utils/dropdownProvider.js\nimport { fetchMasterData } from './moduleMasterAPI';\nfunction getDump(module) {\n  const raw = sessionStorage.getItem(`dump_${module}`);\n  if (!raw) return null;\n  try {\n    const parsed = JSON.parse(raw);\n    // unwrap { data, timestamp } if present\n    return parsed && parsed.data ? parsed.data : parsed;\n  } catch {\n    return null;\n  }\n}\nexport async function getOptionsFromModuleSource(source) {\n  var _dump;\n  const [module, propRaw] = String(source).split('.');\n  const prop = (propRaw || '').trim();\n  console.debug('[dropdownProvider] source:', source, '→ module:', module, 'prop:', prop);\n  if (!module || !prop) {\n    console.warn('[dropdownProvider] Bad source:', source);\n    return [];\n  }\n\n  // 1) try cache (handles wrapped/raw)\n  let dump = getDump(module);\n  console.debug('[dropdownProvider] cache hit?', !!dump);\n\n  // 2) fetch if not cached (fetchMasterData already caches)\n  if (!dump) {\n    console.debug('[dropdownProvider] fetching dump for module:', module);\n    dump = await fetchMasterData(module); // { headers, rows, ... }\n  }\n  const rows = Array.isArray((_dump = dump) === null || _dump === void 0 ? void 0 : _dump.rows) ? dump.rows : [];\n  console.debug('[dropdownProvider] rows length:', rows.length);\n  if (rows[0]) console.debug('[dropdownProvider] first row keys:', Object.keys(rows[0]));\n  if (rows.length === 0) return [];\n\n  // case-insensitive key resolve\n  let resolvedKey = prop;\n  if (!(resolvedKey in rows[0])) {\n    const lower = prop.toLowerCase();\n    const match = Object.keys(rows[0]).find(k => k.toLowerCase() === lower);\n    if (match) resolvedKey = match;\n  }\n  const uniq = new Set();\n  for (const r of rows) {\n    const v = r === null || r === void 0 ? void 0 : r[resolvedKey]; // <-- use resolvedKey here\n    if (v !== undefined && v !== null && `${v}`.trim() !== '') {\n      uniq.add(String(v));\n    }\n  }\n  const out = Array.from(uniq).sort((a, b) => a.localeCompare(b));\n  console.debug('[dropdownProvider] options built:', out.length, out.slice(0, 5));\n  return out;\n}","map":{"version":3,"names":["fetchMasterData","getDump","module","raw","sessionStorage","getItem","parsed","JSON","parse","data","getOptionsFromModuleSource","source","_dump","propRaw","String","split","prop","trim","console","debug","warn","dump","rows","Array","isArray","length","Object","keys","resolvedKey","lower","toLowerCase","match","find","k","uniq","Set","r","v","undefined","add","out","from","sort","a","b","localeCompare","slice"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/utils/dropdownProvider.js"],"sourcesContent":["// src/utils/dropdownProvider.js\nimport { fetchMasterData } from './moduleMasterAPI';\n\nfunction getDump(module) {\n  const raw = sessionStorage.getItem(`dump_${module}`);\n  if (!raw) return null;\n  try {\n    const parsed = JSON.parse(raw);\n    // unwrap { data, timestamp } if present\n    return parsed && parsed.data ? parsed.data : parsed;\n  } catch {\n    return null;\n  }\n}\n\nexport async function getOptionsFromModuleSource(source) {\n  const [module, propRaw] = String(source).split('.');\n  const prop = (propRaw || '').trim();\n  console.debug('[dropdownProvider] source:', source, '→ module:', module, 'prop:', prop);\n\n  if (!module || !prop) {\n    console.warn('[dropdownProvider] Bad source:', source);\n    return [];\n  }\n\n  // 1) try cache (handles wrapped/raw)\n  let dump = getDump(module);\n  console.debug('[dropdownProvider] cache hit?', !!dump);\n\n  // 2) fetch if not cached (fetchMasterData already caches)\n  if (!dump) {\n    console.debug('[dropdownProvider] fetching dump for module:', module);\n    dump = await fetchMasterData(module); // { headers, rows, ... }\n  }\n\n  const rows = Array.isArray(dump?.rows) ? dump.rows : [];\n  console.debug('[dropdownProvider] rows length:', rows.length);\n  if (rows[0]) console.debug('[dropdownProvider] first row keys:', Object.keys(rows[0]));\n\n  if (rows.length === 0) return [];\n\n  // case-insensitive key resolve\n  let resolvedKey = prop;\n  if (!(resolvedKey in rows[0])) {\n    const lower = prop.toLowerCase();\n    const match = Object.keys(rows[0]).find(k => k.toLowerCase() === lower);\n    if (match) resolvedKey = match;\n  }\n\n  const uniq = new Set();\n  for (const r of rows) {\n    const v = r?.[resolvedKey];     // <-- use resolvedKey here\n    if (v !== undefined && v !== null && `${v}`.trim() !== '') {\n      uniq.add(String(v));\n    }\n  }\n\n  const out = Array.from(uniq).sort((a, b) => a.localeCompare(b));\n  console.debug('[dropdownProvider] options built:', out.length, out.slice(0, 5));\n  return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
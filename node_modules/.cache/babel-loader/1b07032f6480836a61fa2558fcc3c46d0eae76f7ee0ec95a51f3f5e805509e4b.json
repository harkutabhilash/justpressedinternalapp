{"ast":null,"code":"var _jsxFileName = \"/Users/abhilash/Downloads/jp-internal-app/src/DynamicFormRenderer.js\",\n  _s = $RefreshSig$();\n// src/DynamicFormRenderer.js\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport FormField from './components/FormField';\nimport Loader from './components/Loader';\nimport * as dateUtils from './utils/dateUtils';\nimport { validateForm } from './utils/formValidation';\nimport { callBackend, fetchAppModules } from './utils/moduleStructureAPI';\nimport { getOptionsFromModuleSource } from './utils/dropdownProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DynamicFormRenderer({\n  config,\n  dropdowns,\n  module\n}) {\n  _s();\n  // Guard\n  const isValidConfig = Array.isArray(config);\n  if (!isValidConfig) {\n    console.error('❌ Invalid config passed to DynamicFormRenderer:', config);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600\",\n      children: \"Unable to load form configuration.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ---- Derived data (memoized) ----\n  const visibleFields = useMemo(() => config.filter(f => !!f.showInApp), [config]);\n  const groupedFields = useMemo(() => {\n    const groups = {};\n    for (const field of visibleFields) {\n      const row = field.formRow || 0;\n      if (!groups[row]) groups[row] = [];\n      groups[row].push(field);\n    }\n    // sort each row by formColumn\n    Object.keys(groups).forEach(rk => {\n      groups[rk].sort((a, b) => (Number(a.formColumn) || 0) - (Number(b.formColumn) || 0));\n    });\n    return groups;\n  }, [visibleFields]);\n  const sortedRowKeys = useMemo(() => Object.keys(groupedFields).sort((a, b) => Number(a) - Number(b)), [groupedFields]);\n\n  // ---- Local state ----\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // dropdown state comes from props, but we keep a local copy we can extend\n  const [dropdownOptions, setDropdownOptions] = useState(dropdowns || {});\n  const [dropdownLoading, setDropdownLoading] = useState({}); // { key: boolean }\n\n  // Keep local dropdown state in sync if parent changes\n  useEffect(() => {\n    setDropdownOptions(dropdowns || {});\n  }, [dropdowns]);\n  useEffect(() => {\n    // Preload all module-based dropdowns once\n    const sources = visibleFields.filter(f => f.inputType === 'dropdown' && f.dropdownSource && f.dropdownSource.includes('.')).map(f => ({\n      key: f.key,\n      src: f.dropdownSource\n    }));\n    sources.forEach(({\n      key,\n      src\n    }) => {\n      const hasAny = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n      if (hasAny) return;\n      getOptionsFromModuleSource(src).then(opts => setDropdownOptions(prev => ({\n        ...prev,\n        [key]: opts || []\n      }))).catch(() => setDropdownOptions(prev => ({\n        ...prev,\n        [key]: []\n      })));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visibleFields]); // fine here since we’re only warming cache\n\n  // Initialize/refresh form defaults whenever config changes\n  useEffect(() => {\n    const next = {};\n    for (const field of visibleFields) {\n      if (field.dataType === 'date') {\n        next[field.key] = new Date().toISOString().split('T')[0]; // yyyy-mm-dd\n      } else {\n        next[field.key] = '';\n      }\n    }\n    setFormData(next);\n    setErrors({});\n  }, [visibleFields]);\n\n  // ---- Handlers (stable via useCallback) ----\n  const handleChange = useCallback((key, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  }, []);\n\n  // Lazy-fetch dropdown options from master modules when user opens a dropdown\n  const handleDropdownOpen = useCallback(field => {\n    const key = field.key;\n    const src = (field === null || field === void 0 ? void 0 : field.dropdownSource) || '';\n    const hasAny = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n    const looksLikeModuleSource = src.includes('.');\n    if (hasAny || !looksLikeModuleSource) return Promise.resolve(dropdownOptions[key] || []);\n\n    // return the promise so FormField can await it\n    return getOptionsFromModuleSource(src).then(opts => {\n      setDropdownOptions(prev => ({\n        ...prev,\n        [key]: opts || []\n      }));\n      return opts || [];\n    }).catch(e => {\n      console.error(`Failed to fetch options for ${key} from ${src}`, e);\n      setDropdownOptions(prev => ({\n        ...prev,\n        [key]: []\n      }));\n      return [];\n    });\n  }, [dropdownOptions]);\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n\n    // 1) Validate (common + module-specific)\n    const newErrors = validateForm(module, visibleFields, formData);\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length > 0) return;\n    setIsSubmitting(true);\n    try {\n      var _appModulesCache, _appModulesCache$data, _matched$modules$find;\n      // 2) Enrich data\n      const user = JSON.parse(sessionStorage.getItem('user'));\n      const username = (user === null || user === void 0 ? void 0 : user.username) || 'Unknown';\n      const enrichedData = {\n        ...formData\n      };\n      for (const field of config) {\n        if (field.dataType === 'date' && enrichedData[field.key]) {\n          enrichedData[field.key] = dateUtils.formatDateToDDMMMYYYY(enrichedData[field.key]);\n        }\n      }\n      enrichedData.createdBy = username;\n      enrichedData.modifiedBy = username;\n      enrichedData.createdOn = dateUtils.getCurrentDateTime();\n      enrichedData.modifiedOn = enrichedData.createdOn;\n\n      // 3) Find sheetId for this module\n      let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n      if (!appModulesCache || !appModulesCache.data) {\n        await fetchAppModules(true);\n        appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n      }\n      const matched = (_appModulesCache = appModulesCache) === null || _appModulesCache === void 0 ? void 0 : (_appModulesCache$data = _appModulesCache.data) === null || _appModulesCache$data === void 0 ? void 0 : _appModulesCache$data.find(group => group.modules.some(m => m.module === module));\n      const sheetId = matched === null || matched === void 0 ? void 0 : (_matched$modules$find = matched.modules.find(m => m.module === module)) === null || _matched$modules$find === void 0 ? void 0 : _matched$modules$find.sheetId;\n      if (!sheetId) {\n        console.error(`❌ No sheetId found for module ${module}`);\n        alert('Error: Unable to find sheetId for submission.');\n        return;\n      }\n\n      // 4) Submit\n      console.log('📤 Payload being sent to backend:', {\n        module,\n        sheetId,\n        tab: 'master',\n        entry: enrichedData\n      });\n      await callBackend('saveLogEntry', {\n        module,\n        sheetId,\n        tab: 'master',\n        entry: enrichedData\n      });\n      alert('✅ Form submitted!');\n      // Reset to defaults\n      const reset = {};\n      for (const field of visibleFields) {\n        reset[field.key] = field.dataType === 'date' ? new Date().toISOString().split('T')[0] : '';\n      }\n      setFormData(reset);\n      setErrors({});\n    } catch (err) {\n      console.error('❌ Submission failed:', err);\n      alert('Failed to submit. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [config, formData, module, visibleFields]);\n\n  // ---- Render ----\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jp-form-area space-y-6\",\n    \"aria-busy\": isSubmitting,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jp-form-header shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-primary\",\n        disabled: isSubmitting,\n        children: isSubmitting ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"animate-spin h-4 w-4 rounded-full border-2 border-gray-300 border-t-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), \"Submitting\\u2026\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this) : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), isSubmitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black/10 backdrop-blur-[1px] z-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"dataBeingSubmitted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: isSubmitting,\n      className: \"space-y-6\",\n      children: sortedRowKeys.map(rowKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: groupedFields[rowKey].map(field => {\n          const opts = dropdownOptions[field.key] || [];\n          const loading = !!dropdownLoading[field.key];\n          return /*#__PURE__*/_jsxDEV(FormField, {\n            field: field,\n            value: formData[field.key],\n            error: errors[field.key],\n            options: dropdownOptions[field.key] || [],\n            onDropdownOpen: () => handleDropdownOpen(field),\n            onChange: val => handleChange(field.key, val)\n          }, field.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(DynamicFormRenderer, \"Zx6rsU9/W1mq/tRavtuqmVM6AOk=\");\n_c = DynamicFormRenderer;\nexport default DynamicFormRenderer;\nvar _c;\n$RefreshReg$(_c, \"DynamicFormRenderer\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useCallback","FormField","Loader","dateUtils","validateForm","callBackend","fetchAppModules","getOptionsFromModuleSource","jsxDEV","_jsxDEV","DynamicFormRenderer","config","dropdowns","module","_s","isValidConfig","Array","isArray","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","visibleFields","filter","f","showInApp","groupedFields","groups","field","row","formRow","push","Object","keys","forEach","rk","sort","a","b","Number","formColumn","sortedRowKeys","formData","setFormData","errors","setErrors","isSubmitting","setIsSubmitting","dropdownOptions","setDropdownOptions","dropdownLoading","setDropdownLoading","sources","inputType","dropdownSource","includes","map","key","src","hasAny","length","then","opts","prev","catch","next","dataType","Date","toISOString","split","handleChange","value","handleDropdownOpen","looksLikeModuleSource","Promise","resolve","e","handleSubmit","preventDefault","newErrors","_appModulesCache","_appModulesCache$data","_matched$modules$find","user","JSON","parse","sessionStorage","getItem","username","enrichedData","formatDateToDDMMMYYYY","createdBy","modifiedBy","createdOn","getCurrentDateTime","modifiedOn","appModulesCache","data","matched","find","group","modules","some","m","sheetId","alert","log","tab","entry","reset","err","onSubmit","type","disabled","message","rowKey","loading","options","onDropdownOpen","onChange","val","_c","$RefreshReg$"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/DynamicFormRenderer.js"],"sourcesContent":["// src/DynamicFormRenderer.js\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport FormField from './components/FormField';\nimport Loader from './components/Loader';\nimport * as dateUtils from './utils/dateUtils';\nimport { validateForm } from './utils/formValidation';\nimport { callBackend, fetchAppModules } from './utils/moduleStructureAPI';\nimport { getOptionsFromModuleSource } from './utils/dropdownProvider';\n\nfunction DynamicFormRenderer({ config, dropdowns, module }) {\n  // Guard\n  const isValidConfig = Array.isArray(config);\n  if (!isValidConfig) {\n    console.error('❌ Invalid config passed to DynamicFormRenderer:', config);\n    return <div className=\"text-red-600\">Unable to load form configuration.</div>;\n  }\n\n  // ---- Derived data (memoized) ----\n  const visibleFields = useMemo(\n    () => config.filter((f) => !!f.showInApp),\n    [config]\n  );\n\n  const groupedFields = useMemo(() => {\n    const groups = {};\n    for (const field of visibleFields) {\n      const row = field.formRow || 0;\n      if (!groups[row]) groups[row] = [];\n      groups[row].push(field);\n    }\n    // sort each row by formColumn\n    Object.keys(groups).forEach((rk) => {\n      groups[rk].sort(\n        (a, b) => (Number(a.formColumn) || 0) - (Number(b.formColumn) || 0)\n      );\n    });\n    return groups;\n  }, [visibleFields]);\n\n  const sortedRowKeys = useMemo(\n    () => Object.keys(groupedFields).sort((a, b) => Number(a) - Number(b)),\n    [groupedFields]\n  );\n\n  // ---- Local state ----\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // dropdown state comes from props, but we keep a local copy we can extend\n  const [dropdownOptions, setDropdownOptions] = useState(dropdowns || {});\n  const [dropdownLoading, setDropdownLoading] = useState({}); // { key: boolean }\n\n  // Keep local dropdown state in sync if parent changes\n  useEffect(() => {\n    setDropdownOptions(dropdowns || {});\n  }, [dropdowns]);\n\n  useEffect(() => {\n  // Preload all module-based dropdowns once\n  const sources = visibleFields\n    .filter(f => f.inputType === 'dropdown' && f.dropdownSource && f.dropdownSource.includes('.'))\n    .map(f => ({ key: f.key, src: f.dropdownSource }));\n\n  sources.forEach(({ key, src }) => {\n    const hasAny = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n    if (hasAny) return;\n    getOptionsFromModuleSource(src)\n      .then(opts => setDropdownOptions(prev => ({ ...prev, [key]: opts || [] })))\n      .catch(() => setDropdownOptions(prev => ({ ...prev, [key]: [] })));\n  });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, [visibleFields]); // fine here since we’re only warming cache\n\n  // Initialize/refresh form defaults whenever config changes\n  useEffect(() => {\n    const next = {};\n    for (const field of visibleFields) {\n      if (field.dataType === 'date') {\n        next[field.key] = new Date().toISOString().split('T')[0]; // yyyy-mm-dd\n      } else {\n        next[field.key] = '';\n      }\n    }\n    setFormData(next);\n    setErrors({});\n  }, [visibleFields]);\n\n  // ---- Handlers (stable via useCallback) ----\n  const handleChange = useCallback((key, value) => {\n    setFormData((prev) => ({ ...prev, [key]: value }));\n  }, []);\n\n  // Lazy-fetch dropdown options from master modules when user opens a dropdown\n const handleDropdownOpen = useCallback(\n  (field) => {\n    const key = field.key;\n    const src = field?.dropdownSource || '';\n    const hasAny = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n    const looksLikeModuleSource = src.includes('.');\n\n    if (hasAny || !looksLikeModuleSource) return Promise.resolve(dropdownOptions[key] || []);\n\n    // return the promise so FormField can await it\n    return getOptionsFromModuleSource(src)\n      .then((opts) => {\n        setDropdownOptions((prev) => ({ ...prev, [key]: opts || [] }));\n        return opts || [];\n      })\n      .catch((e) => {\n        console.error(`Failed to fetch options for ${key} from ${src}`, e);\n        setDropdownOptions((prev) => ({ ...prev, [key]: [] }));\n        return [];\n      });\n  },\n  [dropdownOptions]\n);\n\n  const handleSubmit = useCallback(\n    async (e) => {\n      e.preventDefault();\n\n      // 1) Validate (common + module-specific)\n      const newErrors = validateForm(module, visibleFields, formData);\n      setErrors(newErrors);\n      if (Object.keys(newErrors).length > 0) return;\n\n      setIsSubmitting(true);\n      try {\n        // 2) Enrich data\n        const user = JSON.parse(sessionStorage.getItem('user'));\n        const username = user?.username || 'Unknown';\n\n        const enrichedData = { ...formData };\n        for (const field of config) {\n          if (field.dataType === 'date' && enrichedData[field.key]) {\n            enrichedData[field.key] = dateUtils.formatDateToDDMMMYYYY(\n              enrichedData[field.key]\n            );\n          }\n        }\n        enrichedData.createdBy = username;\n        enrichedData.modifiedBy = username;\n        enrichedData.createdOn = dateUtils.getCurrentDateTime();\n        enrichedData.modifiedOn = enrichedData.createdOn;\n\n        // 3) Find sheetId for this module\n        let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n        if (!appModulesCache || !appModulesCache.data) {\n          await fetchAppModules(true);\n          appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n        }\n        const matched = appModulesCache?.data?.find((group) =>\n          group.modules.some((m) => m.module === module)\n        );\n        const sheetId = matched?.modules.find((m) => m.module === module)?.sheetId;\n        if (!sheetId) {\n          console.error(`❌ No sheetId found for module ${module}`);\n          alert('Error: Unable to find sheetId for submission.');\n          return;\n        }\n\n        // 4) Submit\n        console.log('📤 Payload being sent to backend:', {\n          module,\n          sheetId,\n          tab: 'master',\n          entry: enrichedData,\n        });\n\n        await callBackend('saveLogEntry', {\n          module,\n          sheetId,\n          tab: 'master',\n          entry: enrichedData,\n        });\n\n        alert('✅ Form submitted!');\n        // Reset to defaults\n        const reset = {};\n        for (const field of visibleFields) {\n          reset[field.key] =\n            field.dataType === 'date'\n              ? new Date().toISOString().split('T')[0]\n              : '';\n        }\n        setFormData(reset);\n        setErrors({});\n      } catch (err) {\n        console.error('❌ Submission failed:', err);\n        alert('Failed to submit. Please try again.');\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [config, formData, module, visibleFields]\n  );\n\n  // ---- Render ----\n  return (\n    <form onSubmit={handleSubmit} className=\"jp-form-area space-y-6\" aria-busy={isSubmitting}>\n      {/* Sticky Submit Button */}\n      <div className=\"jp-form-header shadow-md\">\n        <button type=\"submit\" className=\"btn-primary\" disabled={isSubmitting}>\n          {isSubmitting ? (\n            <span className=\"inline-flex items-center gap-2\">\n              <span className=\"animate-spin h-4 w-4 rounded-full border-2 border-gray-300 border-t-transparent\" />\n              Submitting…\n            </span>\n          ) : (\n            'Submit'\n          )}\n        </button>\n      </div>\n\n      {isSubmitting && (\n        <div className=\"fixed inset-0 bg-black/10 backdrop-blur-[1px] z-50 flex items-center justify-center\">\n          <Loader message=\"dataBeingSubmitted\" />\n        </div>\n      )}\n\n      <fieldset disabled={isSubmitting} className=\"space-y-6\">\n        {sortedRowKeys.map((rowKey) => (\n          <div key={rowKey} className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {groupedFields[rowKey].map((field) => {\n              const opts = dropdownOptions[field.key] || [];\n              const loading = !!dropdownLoading[field.key];\n              return (\n                <FormField\n                    key={field.key}\n                    field={field}\n                    value={formData[field.key]}\n                    error={errors[field.key]}\n                    options={dropdownOptions[field.key] || []}\n                    onDropdownOpen={() => handleDropdownOpen(field)}\n                    onChange={(val) => handleChange(field.key, val)}\n                />\n              );\n            })}\n          </div>\n        ))}\n      </fieldset>\n    </form>\n  );\n}\n\nexport default DynamicFormRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
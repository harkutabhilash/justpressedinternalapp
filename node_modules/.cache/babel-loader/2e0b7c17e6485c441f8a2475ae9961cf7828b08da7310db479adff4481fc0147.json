{"ast":null,"code":"// src/utils/logFormAPI.js\nimport { callBackend, fetchAppModules } from './moduleStructureAPI';\nconst toBool = v => String(v).toLowerCase() === 'true';\nfunction normalizeFields(rows) {\n  const arr = Array.isArray(rows) ? rows : [];\n  return arr.map(r => {\n    const dt = String(r.dataType || '').toLowerCase();\n    return {\n      ...r,\n      showInApp: toBool(r.showInApp),\n      isRequired: String(r.isRequired).toUpperCase() === 'TRUE',\n      isDisabled: toBool(r.isDisabled),\n      formRow: Number(r.formRow) || 0,\n      formColumn: Number(r.formColumn) || 0,\n      // map float(2)/numberish to generic number for the FE\n      dataType: /^float|^number/.test(dt) ? 'number' : r.dataType || 'string',\n      inputType: r.inputType || (/^float|^number/.test(dt) ? 'number' : 'text')\n    };\n  }).filter(f => f.showInApp && f.key);\n}\nfunction normalizeDropdowns(rows) {\n  const arr = Array.isArray(rows) ? rows : [];\n  if (!arr.length) return {};\n  const cols = Object.keys(arr[0]);\n  const out = {};\n  cols.forEach(col => {\n    const vals = arr.map(r => r[col]).filter(Boolean);\n    out[col] = [...new Set(vals)];\n  });\n  return out;\n}\nexport async function fetchLogFormConfig(module) {\n  var _appModulesCache, _appModulesCache2, _appModulesCache2$dat, _group$modules$find;\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey) || 'null');\n  const maxAge = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < maxAge) return cached.data;\n\n  // ensure appModules -> sheetId\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache') || 'null');\n  if (!((_appModulesCache = appModulesCache) !== null && _appModulesCache !== void 0 && _appModulesCache.data)) {\n    await fetchAppModules(true);\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache') || 'null');\n  }\n  const group = (_appModulesCache2 = appModulesCache) === null || _appModulesCache2 === void 0 ? void 0 : (_appModulesCache2$dat = _appModulesCache2.data) === null || _appModulesCache2$dat === void 0 ? void 0 : _appModulesCache2$dat.find(g => g.modules.some(m => m.module === module));\n  const sheetId = group === null || group === void 0 ? void 0 : (_group$modules$find = group.modules.find(m => m.module === module)) === null || _group$modules$find === void 0 ? void 0 : _group$modules$find.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  // fetch sheets\n  const cfgRows = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'config'\n  });\n  const ddRows = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'dropdowns'\n  });\n  const fields = normalizeFields(cfgRows);\n  const dropdowns = normalizeDropdowns(ddRows);\n  const data = {\n    fields,\n    dropdowns,\n    sheetId\n  };\n  sessionStorage.setItem(cacheKey, JSON.stringify({\n    data,\n    timestamp: Date.now()\n  }));\n  return data;\n}","map":{"version":3,"names":["callBackend","fetchAppModules","toBool","v","String","toLowerCase","normalizeFields","rows","arr","Array","isArray","map","r","dt","dataType","showInApp","isRequired","toUpperCase","isDisabled","formRow","Number","formColumn","test","inputType","filter","f","key","normalizeDropdowns","length","cols","Object","keys","out","forEach","col","vals","Boolean","Set","fetchLogFormConfig","module","_appModulesCache","_appModulesCache2","_appModulesCache2$dat","_group$modules$find","cacheKey","cached","JSON","parse","sessionStorage","getItem","maxAge","Date","now","timestamp","data","appModulesCache","group","find","g","modules","some","m","sheetId","Error","cfgRows","tab","ddRows","fields","dropdowns","setItem","stringify"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/utils/logFormAPI.js"],"sourcesContent":["// src/utils/logFormAPI.js\nimport { callBackend, fetchAppModules } from './moduleStructureAPI';\n\nconst toBool = (v) => String(v).toLowerCase() === 'true';\n\nfunction normalizeFields(rows) {\n  const arr = Array.isArray(rows) ? rows : [];\n  return arr.map(r => {\n    const dt = String(r.dataType || '').toLowerCase();\n\n    return {\n      ...r,\n      showInApp: toBool(r.showInApp),\n      isRequired: String(r.isRequired).toUpperCase() === 'TRUE',\n      isDisabled: toBool(r.isDisabled),\n\n      formRow: Number(r.formRow) || 0,\n      formColumn: Number(r.formColumn) || 0,\n\n      // map float(2)/numberish to generic number for the FE\n      dataType: /^float|^number/.test(dt) ? 'number' : (r.dataType || 'string'),\n      inputType: r.inputType || (/^float|^number/.test(dt) ? 'number' : 'text'),\n    };\n  }).filter(f => f.showInApp && f.key);\n}\n\nfunction normalizeDropdowns(rows) {\n  const arr = Array.isArray(rows) ? rows : [];\n  if (!arr.length) return {};\n  const cols = Object.keys(arr[0]);\n  const out = {};\n  cols.forEach(col => {\n    const vals = arr.map(r => r[col]).filter(Boolean);\n    out[col] = [...new Set(vals)];\n  });\n  return out;\n}\n\nexport async function fetchLogFormConfig(module) {\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey) || 'null');\n  const maxAge = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < maxAge) return cached.data;\n\n  // ensure appModules -> sheetId\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache') || 'null');\n  if (!appModulesCache?.data) {\n    await fetchAppModules(true);\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache') || 'null');\n  }\n\n  const group = appModulesCache?.data?.find(g => g.modules.some(m => m.module === module));\n  const sheetId = group?.modules.find(m => m.module === module)?.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  // fetch sheets\n  const cfgRows = await callBackend('getSheetData', { sheetId, tab: 'config' });\n  const ddRows  = await callBackend('getSheetData', { sheetId, tab: 'dropdowns' });\n\n  const fields    = normalizeFields(cfgRows);\n  const dropdowns = normalizeDropdowns(ddRows);\n\n  const data = { fields, dropdowns, sheetId };\n  sessionStorage.setItem(cacheKey, JSON.stringify({ data, timestamp: Date.now() }));\n  return data;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
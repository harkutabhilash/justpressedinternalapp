{"ast":null,"code":"// src/utils/logFormAPI.js\nimport { callBackend, fetchAppModules } from './moduleStructureAPI';\nexport async function fetchLogFormConfig(module) {\n  var _appModulesCache, _appModulesCache$data, _matched$modules$find;\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey));\n  const cacheDuration = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < cacheDuration) return cached.data;\n\n  // ensure appModules in cache\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  if (!appModulesCache || !appModulesCache.data) {\n    await fetchAppModules(true);\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  }\n  const matched = (_appModulesCache = appModulesCache) === null || _appModulesCache === void 0 ? void 0 : (_appModulesCache$data = _appModulesCache.data) === null || _appModulesCache$data === void 0 ? void 0 : _appModulesCache$data.find(g => g.modules.some(m => m.module === module));\n  const sheetId = matched === null || matched === void 0 ? void 0 : (_matched$modules$find = matched.modules.find(m => m.module === module)) === null || _matched$modules$find === void 0 ? void 0 : _matched$modules$find.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  // --- fetch config & dropdowns\n  const cfg = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'config'\n  });\n  const dds = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'dropdowns'\n  });\n\n  // --- normalize CONFIG: accept either {headers, rows} or array of objects\n  let fields;\n  if (Array.isArray(cfg)) {\n    // array of row objects from BE\n    fields = cfg.map(row => normalizeFieldRow(row)).filter(f => f.showInApp && f.key);\n  } else {\n    const headers = (cfg === null || cfg === void 0 ? void 0 : cfg.headers) || [];\n    const rows = (cfg === null || cfg === void 0 ? void 0 : cfg.rows) || [];\n    fields = rows.map(r => {\n      const obj = {};\n      headers.forEach((h, i) => {\n        var _ref, _r$h;\n        obj[h] = (_ref = (_r$h = r[h]) !== null && _r$h !== void 0 ? _r$h : r[i]) !== null && _ref !== void 0 ? _ref : r[headers[i]];\n      });\n      return normalizeFieldRow(obj);\n    }).filter(f => f.showInApp && f.key);\n  }\n\n  // --- normalize DROPDOWNS: accept either {rows} or array of objects\n  const ddArray = Array.isArray(dds) ? dds : (dds === null || dds === void 0 ? void 0 : dds.rows) || [];\n  const dropdowns = {};\n  for (const row of ddArray) {\n    Object.entries(row || {}).forEach(([k, v]) => {\n      const s = String(v !== null && v !== void 0 ? v : '').trim();\n      if (!s) return;\n      (dropdowns[k] ||= new Set()).add(s);\n    });\n  }\n  Object.keys(dropdowns).forEach(k => dropdowns[k] = Array.from(dropdowns[k]).sort());\n  const finalData = {\n    fields,\n    dropdowns,\n    sheetId\n  };\n  sessionStorage.setItem(cacheKey, JSON.stringify({\n    data: finalData,\n    timestamp: Date.now()\n  }));\n  return finalData;\n}\n\n// helpers\nfunction normalizeFieldRow(obj) {\n  const toBool = v => String(v).toLowerCase() === 'true';\n  const numOr0 = v => v === '' || v == null ? 0 : Number(v);\n  const out = {\n    ...obj\n  };\n  out.showInApp = toBool(out.showInApp);\n  out.isRequired = toBool(out.isRequired);\n  out.formRow = numOr0(out.formRow);\n  out.formColumn = numOr0(out.formColumn);\n  const dt = String(out.dataType || '').toLowerCase();\n  if (/^float|^number/.test(dt)) {\n    out.dataType = 'number';\n    out.inputType = out.inputType || 'number';\n  }\n  if (String(out.inputType).toLowerCase() === 'date') {\n    out.dataType = 'date';\n  }\n  return out;\n}","map":{"version":3,"names":["callBackend","fetchAppModules","fetchLogFormConfig","module","_appModulesCache","_appModulesCache$data","_matched$modules$find","cacheKey","cached","JSON","parse","sessionStorage","getItem","cacheDuration","Date","now","timestamp","data","appModulesCache","matched","find","g","modules","some","m","sheetId","Error","cfg","tab","dds","fields","Array","isArray","map","row","normalizeFieldRow","filter","f","showInApp","key","headers","rows","r","obj","forEach","h","i","_ref","_r$h","ddArray","dropdowns","Object","entries","k","v","s","String","trim","Set","add","keys","from","sort","finalData","setItem","stringify","toBool","toLowerCase","numOr0","Number","out","isRequired","formRow","formColumn","dt","dataType","test","inputType"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/utils/logFormAPI.js"],"sourcesContent":["// src/utils/logFormAPI.js\nimport { callBackend, fetchAppModules } from './moduleStructureAPI';\n\nexport async function fetchLogFormConfig(module) {\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey));\n  const cacheDuration = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < cacheDuration) return cached.data;\n\n  // ensure appModules in cache\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  if (!appModulesCache || !appModulesCache.data) {\n    await fetchAppModules(true);\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  }\n\n  const matched = appModulesCache?.data?.find(g => g.modules.some(m => m.module === module));\n  const sheetId  = matched?.modules.find(m => m.module === module)?.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  // --- fetch config & dropdowns\n  const cfg = await callBackend('getSheetData', { sheetId, tab: 'config' });\n  const dds = await callBackend('getSheetData', { sheetId, tab: 'dropdowns' });\n\n  // --- normalize CONFIG: accept either {headers, rows} or array of objects\n  let fields;\n  if (Array.isArray(cfg)) {\n    // array of row objects from BE\n    fields = cfg.map(row => normalizeFieldRow(row)).filter(f => f.showInApp && f.key);\n  } else {\n    const headers = cfg?.headers || [];\n    const rows    = cfg?.rows || [];\n    fields = rows.map(r => {\n      const obj = {};\n      headers.forEach((h, i) => { obj[h] = r[h] ?? r[i] ?? r[headers[i]]; });\n      return normalizeFieldRow(obj);\n    }).filter(f => f.showInApp && f.key);\n  }\n\n  // --- normalize DROPDOWNS: accept either {rows} or array of objects\n  const ddArray = Array.isArray(dds) ? dds : (dds?.rows || []);\n  const dropdowns = {};\n  for (const row of ddArray) {\n    Object.entries(row || {}).forEach(([k, v]) => {\n      const s = String(v ?? '').trim();\n      if (!s) return;\n      (dropdowns[k] ||= new Set()).add(s);\n    });\n  }\n  Object.keys(dropdowns).forEach(k => dropdowns[k] = Array.from(dropdowns[k]).sort());\n\n  const finalData = { fields, dropdowns, sheetId };\n  sessionStorage.setItem(cacheKey, JSON.stringify({ data: finalData, timestamp: Date.now() }));\n  return finalData;\n}\n\n// helpers\nfunction normalizeFieldRow(obj) {\n  const toBool = (v) => String(v).toLowerCase() === 'true';\n  const numOr0 = (v) => (v === '' || v == null ? 0 : Number(v));\n\n  const out = { ...obj };\n  out.showInApp  = toBool(out.showInApp);\n  out.isRequired = toBool(out.isRequired);\n  out.formRow    = numOr0(out.formRow);\n  out.formColumn = numOr0(out.formColumn);\n\n  const dt = String(out.dataType || '').toLowerCase();\n  if (/^float|^number/.test(dt)) {\n    out.dataType  = 'number';\n    out.inputType = out.inputType || 'number';\n  }\n  if (String(out.inputType).toLowerCase() === 'date') {\n    out.dataType = 'date';\n  }\n  return out;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
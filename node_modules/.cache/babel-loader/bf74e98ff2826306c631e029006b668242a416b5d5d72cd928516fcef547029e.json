{"ast":null,"code":"// Uses the same cache + fetcher you already have\nimport { fetchMasterData } from './moduleMasterAPI';\n\n// read cached dump for a module (what fetchMasterData writes)\nfunction getDump(module) {\n  const raw = sessionStorage.getItem(`dump_${module}`);\n  if (!raw) return null;\n  try {\n    return JSON.parse(raw);\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Build unique, truthy, sorted options from a module dump for a field\n * source format: \"product.skuId\" or \"warehouse.whName\"\n */\nexport async function getOptionsFromModuleSource(source) {\n  var _dump;\n  const [module, prop] = String(source).split('.');\n  if (!module || !prop) return [];\n\n  // 1) try cache\n  let dump = getDump(module);\n\n  // 2) fetch if not cached\n  if (!dump) {\n    dump = await fetchMasterData(module); // { headers, rows, totalRecords }\n    // fetchMasterData itself writes cache; defensive write just in case:\n    sessionStorage.setItem(`dump_${module}`, JSON.stringify(dump));\n  }\n  const rows = ((_dump = dump) === null || _dump === void 0 ? void 0 : _dump.rows) || [];\n  const uniq = new Set();\n  for (const r of rows) {\n    const v = r === null || r === void 0 ? void 0 : r[prop];\n    if (v !== undefined && v !== null && `${v}`.trim() !== '') uniq.add(String(v));\n  }\n  return Array.from(uniq).sort((a, b) => a.localeCompare(b));\n}","map":{"version":3,"names":["fetchMasterData","getDump","module","raw","sessionStorage","getItem","JSON","parse","getOptionsFromModuleSource","source","_dump","prop","String","split","dump","setItem","stringify","rows","uniq","Set","r","v","undefined","trim","add","Array","from","sort","a","b","localeCompare"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/utils/dropdownProvider.js"],"sourcesContent":["// Uses the same cache + fetcher you already have\nimport { fetchMasterData } from './moduleMasterAPI';\n\n// read cached dump for a module (what fetchMasterData writes)\nfunction getDump(module) {\n  const raw = sessionStorage.getItem(`dump_${module}`);\n  if (!raw) return null;\n  try { return JSON.parse(raw); } catch { return null; }\n}\n\n/**\n * Build unique, truthy, sorted options from a module dump for a field\n * source format: \"product.skuId\" or \"warehouse.whName\"\n */\nexport async function getOptionsFromModuleSource(source) {\n  const [module, prop] = String(source).split('.');\n  if (!module || !prop) return [];\n\n  // 1) try cache\n  let dump = getDump(module);\n\n  // 2) fetch if not cached\n  if (!dump) {\n    dump = await fetchMasterData(module); // { headers, rows, totalRecords }\n    // fetchMasterData itself writes cache; defensive write just in case:\n    sessionStorage.setItem(`dump_${module}`, JSON.stringify(dump));\n  }\n\n  const rows = dump?.rows || [];\n  const uniq = new Set();\n  for (const r of rows) {\n    const v = r?.[prop];\n    if (v !== undefined && v !== null && `${v}`.trim() !== '') uniq.add(String(v));\n  }\n\n  return Array.from(uniq).sort((a, b) => a.localeCompare(b));\n}\n"],"mappings":"AAAA;AACA,SAASA,eAAe,QAAQ,mBAAmB;;AAEnD;AACA,SAASC,OAAOA,CAACC,MAAM,EAAE;EACvB,MAAMC,GAAG,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQH,MAAM,EAAE,CAAC;EACpD,IAAI,CAACC,GAAG,EAAE,OAAO,IAAI;EACrB,IAAI;IAAE,OAAOG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC;EAAE,CAAC,CAAC,MAAM;IAAE,OAAO,IAAI;EAAE;AACvD;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAeK,0BAA0BA,CAACC,MAAM,EAAE;EAAA,IAAAC,KAAA;EACvD,MAAM,CAACR,MAAM,EAAES,IAAI,CAAC,GAAGC,MAAM,CAACH,MAAM,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;EAChD,IAAI,CAACX,MAAM,IAAI,CAACS,IAAI,EAAE,OAAO,EAAE;;EAE/B;EACA,IAAIG,IAAI,GAAGb,OAAO,CAACC,MAAM,CAAC;;EAE1B;EACA,IAAI,CAACY,IAAI,EAAE;IACTA,IAAI,GAAG,MAAMd,eAAe,CAACE,MAAM,CAAC,CAAC,CAAC;IACtC;IACAE,cAAc,CAACW,OAAO,CAAC,QAAQb,MAAM,EAAE,EAAEI,IAAI,CAACU,SAAS,CAACF,IAAI,CAAC,CAAC;EAChE;EAEA,MAAMG,IAAI,GAAG,EAAAP,KAAA,GAAAI,IAAI,cAAAJ,KAAA,uBAAJA,KAAA,CAAMO,IAAI,KAAI,EAAE;EAC7B,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtB,KAAK,MAAMC,CAAC,IAAIH,IAAI,EAAE;IACpB,MAAMI,CAAC,GAAGD,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAGT,IAAI,CAAC;IACnB,IAAIU,CAAC,KAAKC,SAAS,IAAID,CAAC,KAAK,IAAI,IAAI,GAAGA,CAAC,EAAE,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAEL,IAAI,CAACM,GAAG,CAACZ,MAAM,CAACS,CAAC,CAAC,CAAC;EAChF;EAEA,OAAOI,KAAK,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/utils/logFormAPI.js\nimport { callBackend, fetchAppModules } from './moduleStructureAPI';\nexport async function fetchLogFormConfig(module) {\n  var _appModulesCache, _appModulesCache2, _appModulesCache2$dat, _matched$modules$find;\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey));\n  const cacheMs = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < cacheMs) return cached.data;\n\n  // ensure appModules in cache\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  if (!((_appModulesCache = appModulesCache) !== null && _appModulesCache !== void 0 && _appModulesCache.data)) {\n    await fetchAppModules(true);\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  }\n  const matched = (_appModulesCache2 = appModulesCache) === null || _appModulesCache2 === void 0 ? void 0 : (_appModulesCache2$dat = _appModulesCache2.data) === null || _appModulesCache2$dat === void 0 ? void 0 : _appModulesCache2$dat.find(g => g.modules.some(m => m.module === module));\n  const sheetId = matched === null || matched === void 0 ? void 0 : (_matched$modules$find = matched.modules.find(m => m.module === module)) === null || _matched$modules$find === void 0 ? void 0 : _matched$modules$find.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  // --- fetch config & dropdowns\n  const cfg = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'config'\n  });\n  const dds = await callBackend('getSheetData', {\n    sheetId,\n    tab: 'dropdowns'\n  });\n\n  // --- normalize CONFIG\n  const fields = normalizeConfig(cfg).filter(f => f.showInApp && f.key);\n  if (!fields.length) {\n    console.error('fetchLogFormConfig: config normalization produced 0 fields. Raw cfg:', cfg);\n    throw new Error('Form configuration empty – check config tab or normalizer.');\n  }\n\n  // --- normalize DROPDOWNS\n  const dropdowns = normalizeDropdowns(dds);\n  const finalData = {\n    fields,\n    dropdowns,\n    sheetId\n  };\n  sessionStorage.setItem(cacheKey, JSON.stringify({\n    data: finalData,\n    timestamp: Date.now()\n  }));\n  return finalData;\n}\n\n/* ---------------- helpers ---------------- */\n\nfunction normalizeConfig(cfg) {\n  // Case 1: already an array of objects\n  if (Array.isArray(cfg)) return cfg.map(normalizeFieldRow);\n\n  // Case 2: wrapped in .data\n  if (cfg !== null && cfg !== void 0 && cfg.data) return normalizeConfig(cfg.data);\n\n  // Case 3: { headers, rows }\n  if (cfg !== null && cfg !== void 0 && cfg.headers && cfg !== null && cfg !== void 0 && cfg.rows) {\n    const headers = cfg.headers;\n    return cfg.rows.map(r => {\n      // r can be an array or an object keyed by header\n      const obj = {};\n      headers.forEach((h, i) => {\n        var _r$h;\n        obj[h] = r && ((_r$h = r[h]) !== null && _r$h !== void 0 ? _r$h : r[i]);\n      });\n      return normalizeFieldRow(obj);\n    });\n  }\n\n  // Case 4: { rows: [ {..}, {..} ] }\n  if (cfg !== null && cfg !== void 0 && cfg.rows && Array.isArray(cfg.rows) && cfg.rows.length && typeof cfg.rows[0] === 'object') {\n    return cfg.rows.map(normalizeFieldRow);\n  }\n\n  // Unknown shape\n  console.warn('normalizeConfig: unknown cfg shape', cfg);\n  return [];\n}\nfunction normalizeFieldRow(obj) {\n  const toBool = v => String(v).toLowerCase() === 'true';\n  const numOr0 = v => v === '' || v == null ? 0 : Number(v);\n  const out = {\n    ...obj\n  };\n  out.showInApp = toBool(out.showInApp);\n  out.isRequired = toBool(out.isRequired);\n  out.formRow = numOr0(out.formRow);\n  out.formColumn = numOr0(out.formColumn);\n  const dt = String(out.dataType || '').toLowerCase();\n  if (/^float|^number/.test(dt)) {\n    out.dataType = 'number';\n    out.inputType = out.inputType || 'number';\n  }\n  if (String(out.inputType).toLowerCase() === 'date') {\n    out.dataType = 'date';\n  }\n  // explicit disabled flag\n  out.isDisabled = String(out.isDisabled).toLowerCase() === 'true';\n  return out;\n}\nfunction normalizeDropdowns(dds) {\n  // Case A: map of arrays { key: string[] }\n  if (dds && typeof dds === 'object' && !Array.isArray(dds) && !dds.rows) {\n    const out = {};\n    for (const [k, arr] of Object.entries(dds)) {\n      const vals = Array.isArray(arr) ? arr : [];\n      out[k] = uniqueSorted(vals.map(v => String(v !== null && v !== void 0 ? v : '').trim()).filter(Boolean));\n    }\n    return out;\n  }\n\n  // Case B: array of row objects or { rows: [...] }\n  const rows = Array.isArray(dds) ? dds : (dds === null || dds === void 0 ? void 0 : dds.rows) || [];\n  const tmp = {};\n  for (const row of rows) {\n    Object.entries(row || {}).forEach(([k, v]) => {\n      const s = String(v !== null && v !== void 0 ? v : '').trim();\n      if (!s) return;\n      (tmp[k] ||= new Set()).add(s);\n    });\n  }\n  const out = {};\n  Object.keys(tmp).forEach(k => out[k] = uniqueSorted(Array.from(tmp[k])));\n  return out;\n}\nfunction uniqueSorted(arr) {\n  return Array.from(new Set(arr)).sort((a, b) => a.localeCompare(b));\n}","map":{"version":3,"names":["callBackend","fetchAppModules","fetchLogFormConfig","module","_appModulesCache","_appModulesCache2","_appModulesCache2$dat","_matched$modules$find","cacheKey","cached","JSON","parse","sessionStorage","getItem","cacheMs","Date","now","timestamp","data","appModulesCache","matched","find","g","modules","some","m","sheetId","Error","cfg","tab","dds","fields","normalizeConfig","filter","f","showInApp","key","length","console","error","dropdowns","normalizeDropdowns","finalData","setItem","stringify","Array","isArray","map","normalizeFieldRow","headers","rows","r","obj","forEach","h","i","_r$h","warn","toBool","v","String","toLowerCase","numOr0","Number","out","isRequired","formRow","formColumn","dt","dataType","test","inputType","isDisabled","k","arr","Object","entries","vals","uniqueSorted","trim","Boolean","tmp","row","s","Set","add","keys","from","sort","a","b","localeCompare"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/utils/logFormAPI.js"],"sourcesContent":["// src/utils/logFormAPI.js\nimport { callBackend, fetchAppModules } from './moduleStructureAPI';\n\nexport async function fetchLogFormConfig(module) {\n  const cacheKey = `${module}_formConfigCache`;\n  const cached = JSON.parse(sessionStorage.getItem(cacheKey));\n  const cacheMs = 6 * 60 * 60 * 1000;\n  if (cached && Date.now() - cached.timestamp < cacheMs) return cached.data;\n\n  // ensure appModules in cache\n  let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  if (!appModulesCache?.data) {\n    await fetchAppModules(true);\n    appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n  }\n\n  const matched = appModulesCache?.data?.find(g => g.modules.some(m => m.module === module));\n  const sheetId  = matched?.modules.find(m => m.module === module)?.sheetId;\n  if (!sheetId) throw new Error(`No sheetId found for ${module}`);\n\n  // --- fetch config & dropdowns\n  const cfg = await callBackend('getSheetData', { sheetId, tab: 'config' });\n  const dds = await callBackend('getSheetData', { sheetId, tab: 'dropdowns' });\n\n  // --- normalize CONFIG\n  const fields = normalizeConfig(cfg).filter(f => f.showInApp && f.key);\n\n  if (!fields.length) {\n    console.error('fetchLogFormConfig: config normalization produced 0 fields. Raw cfg:', cfg);\n    throw new Error('Form configuration empty – check config tab or normalizer.');\n  }\n\n  // --- normalize DROPDOWNS\n  const dropdowns = normalizeDropdowns(dds);\n\n  const finalData = { fields, dropdowns, sheetId };\n  sessionStorage.setItem(cacheKey, JSON.stringify({ data: finalData, timestamp: Date.now() }));\n  return finalData;\n}\n\n/* ---------------- helpers ---------------- */\n\nfunction normalizeConfig(cfg) {\n  // Case 1: already an array of objects\n  if (Array.isArray(cfg)) return cfg.map(normalizeFieldRow);\n\n  // Case 2: wrapped in .data\n  if (cfg?.data) return normalizeConfig(cfg.data);\n\n  // Case 3: { headers, rows }\n  if (cfg?.headers && cfg?.rows) {\n    const headers = cfg.headers;\n    return cfg.rows.map(r => {\n      // r can be an array or an object keyed by header\n      const obj = {};\n      headers.forEach((h, i) => {\n        obj[h] = (r && (r[h] ?? r[i]));\n      });\n      return normalizeFieldRow(obj);\n    });\n  }\n\n  // Case 4: { rows: [ {..}, {..} ] }\n  if (cfg?.rows && Array.isArray(cfg.rows) && cfg.rows.length && typeof cfg.rows[0] === 'object') {\n    return cfg.rows.map(normalizeFieldRow);\n  }\n\n  // Unknown shape\n  console.warn('normalizeConfig: unknown cfg shape', cfg);\n  return [];\n}\n\nfunction normalizeFieldRow(obj) {\n  const toBool = (v) => String(v).toLowerCase() === 'true';\n  const numOr0 = (v) => (v === '' || v == null ? 0 : Number(v));\n\n  const out = { ...obj };\n  out.showInApp  = toBool(out.showInApp);\n  out.isRequired = toBool(out.isRequired);\n  out.formRow    = numOr0(out.formRow);\n  out.formColumn = numOr0(out.formColumn);\n\n  const dt = String(out.dataType || '').toLowerCase();\n  if (/^float|^number/.test(dt)) {\n    out.dataType  = 'number';\n    out.inputType = out.inputType || 'number';\n  }\n  if (String(out.inputType).toLowerCase() === 'date') {\n    out.dataType = 'date';\n  }\n  // explicit disabled flag\n  out.isDisabled = String(out.isDisabled).toLowerCase() === 'true';\n\n  return out;\n}\n\nfunction normalizeDropdowns(dds) {\n  // Case A: map of arrays { key: string[] }\n  if (dds && typeof dds === 'object' && !Array.isArray(dds) && !dds.rows) {\n    const out = {};\n    for (const [k, arr] of Object.entries(dds)) {\n      const vals = Array.isArray(arr) ? arr : [];\n      out[k] = uniqueSorted(vals.map(v => String(v ?? '').trim()).filter(Boolean));\n    }\n    return out;\n  }\n\n  // Case B: array of row objects or { rows: [...] }\n  const rows = Array.isArray(dds) ? dds : (dds?.rows || []);\n  const tmp = {};\n  for (const row of rows) {\n    Object.entries(row || {}).forEach(([k, v]) => {\n      const s = String(v ?? '').trim();\n      if (!s) return;\n      (tmp[k] ||= new Set()).add(s);\n    });\n  }\n  const out = {};\n  Object.keys(tmp).forEach(k => out[k] = uniqueSorted(Array.from(tmp[k])));\n  return out;\n}\n\nfunction uniqueSorted(arr) {\n  return Array.from(new Set(arr)).sort((a, b) => a.localeCompare(b));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/abhilash/Downloads/jp-internal-app/src/DynamicFormRenderer.js\",\n  _s = $RefreshSig$();\n// src/DynamicFormRenderer.js\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport FormField from './components/FormField';\nimport Loader from './components/Loader';\nimport * as dateUtils from './utils/dateUtils';\nimport { validateForm } from './utils/formValidation';\nimport { callBackend, fetchAppModules } from './utils/moduleStructureAPI';\nimport { getOptionsFromModuleSource } from './utils/dropdownProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DynamicFormRenderer({\n  config,\n  dropdowns,\n  module\n}) {\n  _s();\n  // Guard\n  if (!Array.isArray(config)) {\n    console.error('❌ Invalid config passed to DynamicFormRenderer:', config);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600\",\n      children: \"Unable to load form configuration.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ---- Derived data ----\n  const visibleFields = useMemo(() => config.filter(f => !!f.showInApp), [config]);\n  const groupedFields = useMemo(() => {\n    const groups = {};\n    for (const field of visibleFields) {\n      const row = field.formRow || 0;\n      if (!groups[row]) groups[row] = [];\n      groups[row].push(field);\n    }\n    Object.keys(groups).forEach(rk => {\n      groups[rk].sort((a, b) => (Number(a.formColumn) || 0) - (Number(b.formColumn) || 0));\n    });\n    return groups;\n  }, [visibleFields]);\n  const sortedRowKeys = useMemo(() => Object.keys(groupedFields).sort((a, b) => Number(a) - Number(b)), [groupedFields]);\n\n  // Build initial form state synchronously to avoid uncontrolled->controlled\n  const initialFormState = useMemo(() => {\n    const obj = {};\n    for (const f of visibleFields) {\n      obj[f.key] = f.dataType === 'date' ? new Date().toISOString().split('T')[0] // yyyy-mm-dd\n      : '';\n    }\n    return obj;\n  }, [visibleFields]);\n\n  // ---- Local state ----\n  const [formData, setFormData] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // dropdown state comes from props, but we keep a local copy we can extend\n  const [dropdownOptions, setDropdownOptions] = useState(dropdowns || {});\n  const [dropdownLoading, setDropdownLoading] = useState({}); // optional per-field loading\n\n  // Keep local dropdown state in sync if parent changes\n  useEffect(() => {\n    setDropdownOptions(dropdowns || {});\n  }, [dropdowns]);\n\n  // Reset form when visibleFields changes\n  useEffect(() => {\n    setFormData(initialFormState);\n    setErrors({});\n  }, [initialFormState]);\n\n  // Pre-compute module-based dropdown sources to preload (improves UX)\n  const moduleDropdownSources = useMemo(() => {\n    return visibleFields.filter(f => f.inputType === 'dropdown' && f.dropdownSource && f.dropdownSource.includes('.')).map(f => ({\n      key: f.key,\n      src: f.dropdownSource\n    }));\n  }, [visibleFields]);\n\n  // Preload dropdowns (no eslint-disable needed)\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      for (const {\n        key,\n        src\n      } of moduleDropdownSources) {\n        const already = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n        if (already) continue;\n        try {\n          const opts = await getOptionsFromModuleSource(src);\n          if (!cancelled) {\n            setDropdownOptions(prev => ({\n              ...prev,\n              [key]: opts || []\n            }));\n          }\n        } catch {\n          if (!cancelled) {\n            setDropdownOptions(prev => ({\n              ...prev,\n              [key]: []\n            }));\n          }\n        }\n      }\n    })();\n    return () => {\n      cancelled = true;\n    };\n  }, [moduleDropdownSources, dropdownOptions]);\n\n  // ---- Handlers ----\n  const handleChange = useCallback((key, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  }, []);\n\n  // Fetch options when a dropdown is opened (only if needed)\n  const handleDropdownOpen = useCallback(field => {\n    const key = field.key;\n    const src = (field === null || field === void 0 ? void 0 : field.dropdownSource) || '';\n    const hasAny = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n    const looksLikeModuleSource = src.includes('.');\n    if (hasAny || !looksLikeModuleSource) {\n      return Promise.resolve(dropdownOptions[key] || []);\n    }\n    setDropdownLoading(s => ({\n      ...s,\n      [key]: true\n    }));\n    return getOptionsFromModuleSource(src).then(opts => {\n      setDropdownOptions(prev => ({\n        ...prev,\n        [key]: opts || []\n      }));\n      return opts || [];\n    }).catch(e => {\n      console.error(`Failed to fetch options for ${key} from ${src}`, e);\n      setDropdownOptions(prev => ({\n        ...prev,\n        [key]: []\n      }));\n      return [];\n    }).finally(() => {\n      setDropdownLoading(s => ({\n        ...s,\n        [key]: false\n      }));\n    });\n  }, [dropdownOptions]);\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n\n    // Validate (common + module-specific)\n    const newErrors = validateForm(module, visibleFields, formData);\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length > 0) return;\n    setIsSubmitting(true);\n    try {\n      var _appModulesCache, _appModulesCache$data, _matched$modules$find;\n      // Enrich\n      const user = JSON.parse(sessionStorage.getItem('user'));\n      const username = (user === null || user === void 0 ? void 0 : user.username) || 'Unknown';\n      const enrichedData = {\n        ...formData\n      };\n      for (const field of config) {\n        if (field.dataType === 'date' && enrichedData[field.key]) {\n          enrichedData[field.key] = dateUtils.formatDateToDDMMMYYYY(enrichedData[field.key]);\n        }\n      }\n      enrichedData.createdBy = username;\n      enrichedData.modifiedBy = username;\n      enrichedData.createdOn = dateUtils.getCurrentDateTime();\n      enrichedData.modifiedOn = enrichedData.createdOn;\n\n      // Find sheetId\n      let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n      if (!appModulesCache || !appModulesCache.data) {\n        await fetchAppModules(true);\n        appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n      }\n      const matched = (_appModulesCache = appModulesCache) === null || _appModulesCache === void 0 ? void 0 : (_appModulesCache$data = _appModulesCache.data) === null || _appModulesCache$data === void 0 ? void 0 : _appModulesCache$data.find(group => group.modules.some(m => m.module === module));\n      const sheetId = matched === null || matched === void 0 ? void 0 : (_matched$modules$find = matched.modules.find(m => m.module === module)) === null || _matched$modules$find === void 0 ? void 0 : _matched$modules$find.sheetId;\n      if (!sheetId) {\n        console.error(`❌ No sheetId found for module ${module}`);\n        alert('Error: Unable to find sheetId for submission.');\n        return;\n      }\n\n      // Submit\n      console.log('📤 Payload being sent to backend:', {\n        module,\n        sheetId,\n        tab: 'master',\n        entry: enrichedData\n      });\n      await callBackend('saveLogEntry', {\n        module,\n        sheetId,\n        tab: 'master',\n        entry: enrichedData\n      });\n      alert('✅ Form submitted!');\n      setFormData(initialFormState); // reset\n      setErrors({});\n    } catch (err) {\n      console.error('❌ Submission failed:', err);\n      alert('Failed to submit. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [config, formData, module, visibleFields, initialFormState]);\n\n  // ---- Render ----\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jp-form-area space-y-6\",\n    \"aria-busy\": isSubmitting,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jp-form-header shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-primary\",\n        disabled: isSubmitting,\n        children: isSubmitting ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"animate-spin h-4 w-4 rounded-full border-2 border-gray-300 border-t-transparent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), \"Submitting\\u2026\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this) : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), isSubmitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black/10 backdrop-blur-[1px] z-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"dataBeingSubmitted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: isSubmitting,\n      className: \"space-y-6\",\n      children: sortedRowKeys.map(rowKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: groupedFields[rowKey].map(field => {\n          var _formData$field$key;\n          return /*#__PURE__*/_jsxDEV(FormField, {\n            field: field,\n            value: (_formData$field$key = formData[field.key]) !== null && _formData$field$key !== void 0 ? _formData$field$key : '',\n            error: errors[field.key],\n            options: dropdownOptions[field.key] || [],\n            onDropdownOpen: () => handleDropdownOpen(field),\n            onChange: val => handleChange(field.key, val),\n            loading: !!dropdownLoading[field.key]\n          }, field.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this);\n        })\n      }, rowKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(DynamicFormRenderer, \"t+fuJ/gXcopL2Kr1CtJFzQcZLdY=\");\n_c = DynamicFormRenderer;\nexport default DynamicFormRenderer;\nvar _c;\n$RefreshReg$(_c, \"DynamicFormRenderer\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useCallback","FormField","Loader","dateUtils","validateForm","callBackend","fetchAppModules","getOptionsFromModuleSource","jsxDEV","_jsxDEV","DynamicFormRenderer","config","dropdowns","module","_s","Array","isArray","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","visibleFields","filter","f","showInApp","groupedFields","groups","field","row","formRow","push","Object","keys","forEach","rk","sort","a","b","Number","formColumn","sortedRowKeys","initialFormState","obj","key","dataType","Date","toISOString","split","formData","setFormData","errors","setErrors","isSubmitting","setIsSubmitting","dropdownOptions","setDropdownOptions","dropdownLoading","setDropdownLoading","moduleDropdownSources","inputType","dropdownSource","includes","map","src","cancelled","already","length","opts","prev","handleChange","value","handleDropdownOpen","hasAny","looksLikeModuleSource","Promise","resolve","s","then","catch","e","finally","handleSubmit","preventDefault","newErrors","_appModulesCache","_appModulesCache$data","_matched$modules$find","user","JSON","parse","sessionStorage","getItem","username","enrichedData","formatDateToDDMMMYYYY","createdBy","modifiedBy","createdOn","getCurrentDateTime","modifiedOn","appModulesCache","data","matched","find","group","modules","some","m","sheetId","alert","log","tab","entry","err","onSubmit","type","disabled","message","rowKey","_formData$field$key","options","onDropdownOpen","onChange","val","loading","_c","$RefreshReg$"],"sources":["/Users/abhilash/Downloads/jp-internal-app/src/DynamicFormRenderer.js"],"sourcesContent":["// src/DynamicFormRenderer.js\nimport React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport FormField from './components/FormField';\nimport Loader from './components/Loader';\nimport * as dateUtils from './utils/dateUtils';\nimport { validateForm } from './utils/formValidation';\nimport { callBackend, fetchAppModules } from './utils/moduleStructureAPI';\nimport { getOptionsFromModuleSource } from './utils/dropdownProvider';\n\nfunction DynamicFormRenderer({ config, dropdowns, module }) {\n  // Guard\n  if (!Array.isArray(config)) {\n    console.error('❌ Invalid config passed to DynamicFormRenderer:', config);\n    return <div className=\"text-red-600\">Unable to load form configuration.</div>;\n  }\n\n  // ---- Derived data ----\n  const visibleFields = useMemo(\n    () => config.filter((f) => !!f.showInApp),\n    [config]\n  );\n\n  const groupedFields = useMemo(() => {\n    const groups = {};\n    for (const field of visibleFields) {\n      const row = field.formRow || 0;\n      if (!groups[row]) groups[row] = [];\n      groups[row].push(field);\n    }\n    Object.keys(groups).forEach((rk) => {\n      groups[rk].sort(\n        (a, b) => (Number(a.formColumn) || 0) - (Number(b.formColumn) || 0)\n      );\n    });\n    return groups;\n  }, [visibleFields]);\n\n  const sortedRowKeys = useMemo(\n    () => Object.keys(groupedFields).sort((a, b) => Number(a) - Number(b)),\n    [groupedFields]\n  );\n\n  // Build initial form state synchronously to avoid uncontrolled->controlled\n  const initialFormState = useMemo(() => {\n    const obj = {};\n    for (const f of visibleFields) {\n      obj[f.key] =\n        f.dataType === 'date'\n          ? new Date().toISOString().split('T')[0] // yyyy-mm-dd\n          : '';\n    }\n    return obj;\n  }, [visibleFields]);\n\n  // ---- Local state ----\n  const [formData, setFormData] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // dropdown state comes from props, but we keep a local copy we can extend\n  const [dropdownOptions, setDropdownOptions] = useState(dropdowns || {});\n  const [dropdownLoading, setDropdownLoading] = useState({}); // optional per-field loading\n\n  // Keep local dropdown state in sync if parent changes\n  useEffect(() => {\n    setDropdownOptions(dropdowns || {});\n  }, [dropdowns]);\n\n  // Reset form when visibleFields changes\n  useEffect(() => {\n    setFormData(initialFormState);\n    setErrors({});\n  }, [initialFormState]);\n\n  // Pre-compute module-based dropdown sources to preload (improves UX)\n  const moduleDropdownSources = useMemo(() => {\n    return visibleFields\n      .filter(\n        (f) =>\n          f.inputType === 'dropdown' &&\n          f.dropdownSource &&\n          f.dropdownSource.includes('.')\n      )\n      .map((f) => ({ key: f.key, src: f.dropdownSource }));\n  }, [visibleFields]);\n\n  // Preload dropdowns (no eslint-disable needed)\n  useEffect(() => {\n    let cancelled = false;\n\n    (async () => {\n      for (const { key, src } of moduleDropdownSources) {\n        const already = Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n        if (already) continue;\n\n        try {\n          const opts = await getOptionsFromModuleSource(src);\n          if (!cancelled) {\n            setDropdownOptions((prev) => ({ ...prev, [key]: opts || [] }));\n          }\n        } catch {\n          if (!cancelled) {\n            setDropdownOptions((prev) => ({ ...prev, [key]: [] }));\n          }\n        }\n      }\n    })();\n\n    return () => {\n      cancelled = true;\n    };\n  }, [moduleDropdownSources, dropdownOptions]);\n\n  // ---- Handlers ----\n  const handleChange = useCallback((key, value) => {\n    setFormData((prev) => ({ ...prev, [key]: value }));\n  }, []);\n\n  // Fetch options when a dropdown is opened (only if needed)\n  const handleDropdownOpen = useCallback(\n    (field) => {\n      const key = field.key;\n      const src = field?.dropdownSource || '';\n      const hasAny =\n        Array.isArray(dropdownOptions[key]) && dropdownOptions[key].length > 0;\n      const looksLikeModuleSource = src.includes('.');\n\n      if (hasAny || !looksLikeModuleSource) {\n        return Promise.resolve(dropdownOptions[key] || []);\n      }\n\n      setDropdownLoading((s) => ({ ...s, [key]: true }));\n      return getOptionsFromModuleSource(src)\n        .then((opts) => {\n          setDropdownOptions((prev) => ({ ...prev, [key]: opts || [] }));\n          return opts || [];\n        })\n        .catch((e) => {\n          console.error(`Failed to fetch options for ${key} from ${src}`, e);\n          setDropdownOptions((prev) => ({ ...prev, [key]: [] }));\n          return [];\n        })\n        .finally(() => {\n          setDropdownLoading((s) => ({ ...s, [key]: false }));\n        });\n    },\n    [dropdownOptions]\n  );\n\n  const handleSubmit = useCallback(\n    async (e) => {\n      e.preventDefault();\n\n      // Validate (common + module-specific)\n      const newErrors = validateForm(module, visibleFields, formData);\n      setErrors(newErrors);\n      if (Object.keys(newErrors).length > 0) return;\n\n      setIsSubmitting(true);\n      try {\n        // Enrich\n        const user = JSON.parse(sessionStorage.getItem('user'));\n        const username = user?.username || 'Unknown';\n\n        const enrichedData = { ...formData };\n        for (const field of config) {\n          if (field.dataType === 'date' && enrichedData[field.key]) {\n            enrichedData[field.key] = dateUtils.formatDateToDDMMMYYYY(\n              enrichedData[field.key]\n            );\n          }\n        }\n        enrichedData.createdBy = username;\n        enrichedData.modifiedBy = username;\n        enrichedData.createdOn = dateUtils.getCurrentDateTime();\n        enrichedData.modifiedOn = enrichedData.createdOn;\n\n        // Find sheetId\n        let appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n        if (!appModulesCache || !appModulesCache.data) {\n          await fetchAppModules(true);\n          appModulesCache = JSON.parse(sessionStorage.getItem('appModulesCache'));\n        }\n        const matched = appModulesCache?.data?.find((group) =>\n          group.modules.some((m) => m.module === module)\n        );\n        const sheetId = matched?.modules.find((m) => m.module === module)?.sheetId;\n        if (!sheetId) {\n          console.error(`❌ No sheetId found for module ${module}`);\n          alert('Error: Unable to find sheetId for submission.');\n          return;\n        }\n\n        // Submit\n        console.log('📤 Payload being sent to backend:', {\n          module,\n          sheetId,\n          tab: 'master',\n          entry: enrichedData,\n        });\n\n        await callBackend('saveLogEntry', {\n          module,\n          sheetId,\n          tab: 'master',\n          entry: enrichedData,\n        });\n\n        alert('✅ Form submitted!');\n        setFormData(initialFormState); // reset\n        setErrors({});\n      } catch (err) {\n        console.error('❌ Submission failed:', err);\n        alert('Failed to submit. Please try again.');\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [config, formData, module, visibleFields, initialFormState]\n  );\n\n  // ---- Render ----\n  return (\n    <form onSubmit={handleSubmit} className=\"jp-form-area space-y-6\" aria-busy={isSubmitting}>\n      {/* Sticky Submit Button */}\n      <div className=\"jp-form-header shadow-md\">\n        <button type=\"submit\" className=\"btn-primary\" disabled={isSubmitting}>\n          {isSubmitting ? (\n            <span className=\"inline-flex items-center gap-2\">\n              <span className=\"animate-spin h-4 w-4 rounded-full border-2 border-gray-300 border-t-transparent\" />\n              Submitting…\n            </span>\n          ) : (\n            'Submit'\n          )}\n        </button>\n      </div>\n\n      {isSubmitting && (\n        <div className=\"fixed inset-0 bg-black/10 backdrop-blur-[1px] z-50 flex items-center justify-center\">\n          <Loader message=\"dataBeingSubmitted\" />\n        </div>\n      )}\n\n      <fieldset disabled={isSubmitting} className=\"space-y-6\">\n        {sortedRowKeys.map((rowKey) => (\n          <div key={rowKey} className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {groupedFields[rowKey].map((field) => (\n              <FormField\n                key={field.key}\n                field={field}\n                value={formData[field.key] ?? ''}\n                error={errors[field.key]}\n                options={dropdownOptions[field.key] || []}\n                onDropdownOpen={() => handleDropdownOpen(field)}\n                onChange={(val) => handleChange(field.key, val)}\n                loading={!!dropdownLoading[field.key]}\n              />\n            ))}\n          </div>\n        ))}\n      </fieldset>\n    </form>\n  );\n}\n\nexport default DynamicFormRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}